KCPSM6 Assembler log file for program 'C:\Users\vjera\Downloads\URSLAB4_2\URSLAB4_2\program.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 12 Jun 2024
Assembly timestamp: 19:36:39

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 021 hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 34
Memory locations available: 4062


Assembly listing

 Addr Code                     Instruction

 000                           ; Assembly program for calculating moving average of 4. Also calculates max, min and total avg of all values.
 000                           ; Data (50 values) keeps coming from address 0x10, calculated moving avg values are sent to 0x20.
 000                           ; max, min and total avg values are sent to 0x30, 0x40 and 0x50 respectively
 000                           ; A vhd logic is used to compute moving avg, data is sent to it at addresses 0x00, 0x01 and 0x02
 000                           ; constants definition (addresses)
 000                           CONSTANT MOVAVG_INPUT, 00
 000                           CONSTANT MOVAVG_OUTPUT, 01
 000                           CONSTANT MOVAVG_RESET, 02
 000                           CONSTANT UNP_BVJ, 10
 000                           CONSTANT RPP_BVJ, 20
 000                           CONSTANT AVG, 30
 000                           CONSTANT MIN, 40
 000                           CONSTANT MAX, 50
 000  01000                    LOAD s0, 00                    ; data
 001  01100                    LOAD s1, 00                    ; counter
 002  01200                    LOAD s2, 00                    ; mov_avg
 003  01300                    LOAD s3, 00                    ; max
 004  014FF                    LOAD s4, FF                    ; min
 005                           ; sum (for avg) (using LSB and MSB because sum of 50 values possibly overflows)
 005  01500                    LOAD s5, 00                    ; LSB
 006  01600                    LOAD s6, 00                    ; MSB
 007  01731                    LOAD s7, 31                    ; help register, holds value 49 (0x31)
 008  01800                    LOAD s8, 00                    ; avg
 009                           ; main loop for getting data from a peripheral unit, processing data and sending data to another peripheral unit
 009                     loop: 
 009  09010                    INPUT s0, 10[UNP_BVJ]          ; read value
 00A  11101                    ADD s1, 01                     ; inc counter
 00B  2D000                    OUTPUT s0, 00[MOVAVG_INPUT]    ; send to vhd program
 00C  09201                    INPUT s2, 01[MOVAVG_OUTPUT]    ; read mov_avg
 00D  1D104                    COMPARE s1, 04                 ; if counter < 4   ->   skip sending mov_avg
 00E  3A010                    JUMP C, 010[update_values]
 00F  2D220                    OUTPUT s2, 20[RPP_BVJ]         ; send mov_avg
 010            update_values: 
 010  10500                    ADD s5, s0                     ; add to sum of all values (for avg calc)
 011  13600                    ADDCY s6, 00                   ; add Carry (C) bit to MSB
 012  1C300                    COMPARE s3, s0                 ; compare data with max value
 013  3E015                    JUMP NC, 015[update_min_value] ; is max (s3) is smaller than s0 (data) update max value (update_max), else go to update_min_value
 014               update_max: 
 014  00300                    LOAD s3, s0                    ; update max value
 015         update_min_value: 
 015  1C040                    COMPARE s0, s4                 ; compare data with min value
 016  3E018                    JUMP NC, 018[check_counter]    ; is min (s4) is bigger than s0 (data) update min value (update_min), else go to check_counter
 017               update_min: 
 017  00400                    LOAD s4, s0
 018            check_counter: 
 018  1C710                    COMPARE s7, s1                 ; if counter >= 0x32 (50) (end of incoming data)
 019  3E009                    JUMP NC, 009[loop]             ; end of calculating mov_avg, start sending max, min and total avg, else go to loop
 01A                send_data: 
 01A  2D350                    OUTPUT s3, 50[MAX]
 01B  2D440                    OUTPUT s4, 40[MIN]
 01C                 avg_calc: 
 01C  19532                    SUB s5, 32
 01D  1B600                    SUBCY s6, 00
 01E  3A021                    JUMP C, 021[end]
 01F  11801                    ADD s8, 01
 020  2201C                    JUMP 01C[avg_calc]
 021                      end: 
 021  2D830                    OUTPUT s8, 30[AVG]


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\vjera\Downloads\URSLAB4_2\URSLAB4_2\program.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   19'd         
 timestamp_minutes 36'd         
 timestamp_seconds 39'd         
 datestamp_year    24'd         
 datestamp_month   6'd          
 datestamp_day     12'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 MOVAVG_INPUT      00           program.psm
 MOVAVG_OUTPUT     01           program.psm
 MOVAVG_RESET      02           program.psm
 UNP_BVJ           10           program.psm
 RPP_BVJ           20           program.psm
 AVG               30           program.psm
 MIN               40           program.psm
 MAX               50           program.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "12 Jun 2024"  
 timestamp$        "19:36:39"     



List of line labels

   Label              Addr  Source PSM File

   loop               009   program.psm
   update_values      010   program.psm
 * update_max         014   program.psm
   update_min_value   015   program.psm
 * update_min         017   program.psm
   check_counter      018   program.psm
 * send_data          01A   program.psm
   avg_calc           01C   program.psm
   end                021   program.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             11
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD               3
 ADDCY             1
 SUB               1
 SUBCY             1

 TEST              -
 TESTCY            -
 COMPARE           4
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             2
 OUTPUT            5
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            -
 RETURNI           -

 JUMP              6
 JUMP@             -
 CALL              -
 CALL@             -
 RETURN            -
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
